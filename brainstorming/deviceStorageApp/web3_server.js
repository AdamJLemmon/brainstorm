var zerorpc = require("zerorpc");
var Web3 = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));

console.log("Web3 is connected: " + web3.isConnected())

// Init required params
var owner_addr = web3.eth.accounts[0]
// add user addr to permissoned map
var permissioned_user = "0x99b2c4b041a370ca971456467aaec117c4d526cd"
// create new account not add to permissions to test
var NON_permissioned_user = "tbd"
var device_addr = web3.eth.accounts[1]
var password = "geth"

// CHANGE depending on method to call
var defaultAccount = owner_addr

// unlock and set default which account is permissioned
web3.personal.unlockAccount(defaultAccount, password)
web3.eth.defaultAccount = defaultAccount

// data and interface for contract to deploy
var data = '0x60606040523461000057604051602080610dc5833981016040528080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055506001600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055505b505b610cad806101186000396000f360606040526000357c010000000000000000000000000000000000000000000000000000000090048063098805961461006457806341c0e1b51461009d5780634946c355146100ac57806387db9f231461013e578063e01708b31461017a575b610000565b346100005761007161022e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610000576100aa6102b6565b005b34610000576100d060048080359060200190919080359060200190919050506103a7565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b346100005761016260048080359060200190919080359060200190919050506106ad565b60405180821515815260200191505060405180910390f35b3461000057610218600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091905050610847565b6040518082815260200191505060405180910390f35b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028c57610000565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b5b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031257610000565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103a357600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b5b565b602060405190810160405280600081526020015060006000600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561040157610000565b600090505b6003805490508110156105b65784600382815481101561000057906000526020600020906003020160005b5060010154118015610463575083600382815481101561000057906000526020600020906003020160005b5060010154105b156105a8576104c46104ad604060405190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815260200150610b83565b6104b685610b83565b610bc990919063ffffffff16565b9250600381815481101561000057906000526020600020906003020160005b5060000191506105a561058e838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105845780601f1061055957610100808354040283529160200191610584565b820191906000526020600020905b81548152906001019060200180831161056757829003601f168201915b5050505050610b83565b61059785610b83565b610bc990919063ffffffff16565b92505b5b8080600101915050610406565b7f6122ef6c5630254512f55854b5b7cb6a95693c32aff4a1867097dd7dbdaa9d63600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163385604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156106945780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15b5b505092915050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561070b57610000565b81600260008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055507f2f972837b5f07f2f039bc5c37cbac73dbe21c9de902d02ef77d9abca796c7e07600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018215158152602001935050505060405180910390a1600260008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b5b92915050565b6000600380548060010182818154818355818115116109375760030281600302836000526020600020918201910161093691905b8082111561093257600060008201805460018160011615610100020316600290046000825580601f106108ae57506108e5565b601f0160209004906000526020600020908101906108e491905b808211156108e05760008160009055506001016108c8565b5090565b5b506001820160009055600282018054600082559060005260206000209081019061092791905b8082111561092357600081600090555060010161090b565b5090565b5b505060030161087b565b5090565b5b505050916000526020600020906003020160005b6060604051908101604052808881526020018781526020018681526020015090919091506000820151816000019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109c157805160ff19168380011785556109ef565b828001600101855582156109ef579182015b828111156109ee5782518255916020019190600101906109d3565b5b509050610a1491905b80821115610a105760008160009055506001016109f8565b5090565b5050602082015181600101556040820151816002019080519060200190828054828255906000526020600020908101928215610a6d579160200282015b82811115610a6c578251825591602001919060010190610a51565b5b509050610a9291905b80821115610a8e576000816000905550600101610a76565b5090565b50505050507f2a80cb72a75af4f354419fe2323c652b39f67fa7a1fc582415194f09e32ca9c3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585600380549050604051808573ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610b6b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b9392505050565b6040604051908101604052806000815260200160008152602001506000602083019050604060405190810160405280845181526020018281526020015091505b50919050565b6020604051908101604052806000815260200150602060405190810160405280600081526020015060008360000151856000015101604051805910610c0b5750595b908082528060200260200182016040528015505b509150602082019050610c3b8186602001518760000151610c60565b610c548560000151820185602001518660000151610c60565b8192505b505092915050565b60005b602082101515610c8957825184526020840193506020830192505b602082039150610c63565b6001826020036101000a039050801983511681855116818117865250505b5050505056'
var interface = [{"constant":true,"inputs":[],"name":"get_device_addr","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"start_time","type":"uint256"},{"name":"stop_time","type":"uint256"}],"name":"get_uploads_in_time_interval","outputs":[{"name":"data_hash_string","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"user_address","type":"address"},{"name":"permission","type":"bool"}],"name":"set_user_permissions","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"data_hash","type":"string"},{"name":"timestamp","type":"uint256"},{"name":"shape","type":"uint256[]"}],"name":"new_data_upload","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_addr","type":"address"}],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"device_addr","type":"address"},{"indexed":false,"name":"data_hash","type":"string"},{"indexed":false,"name":"timestamp","type":"uint256"},{"indexed":false,"name":"upload_array_length","type":"uint256"}],"name":"newDataUpload","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"device_addr","type":"address"},{"indexed":false,"name":"user_address","type":"address"},{"indexed":false,"name":"permission","type":"bool"}],"name":"userPermissionsRevised","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"device_addr","type":"address"},{"indexed":false,"name":"user_address","type":"address"},{"indexed":false,"name":"return_value","type":"string"}],"name":"dataHashesReceived","type":"event"}]

// address of the device contract once deployed
var contract_addr = "0x7d82874bfc6882428ee36eff31b3ace1c251ab86"

// retrieve ref to contract if already deployed
var deviceData = web3.eth.contract(interface).at(contract_addr)

// init listeners for contract events once deployed
createEventListeners();

// deploy the contract initially
// deploy_device_data_contract(data, interface, device_addr)

var server = new zerorpc.Server({
    executeMethod: function(method, params, reply) {
        console.log("Executing method: " + method + ", params: " + String(params))
        
        // response to return following method call
        var res;

        if (typeof param != undefined)
          res = eval(method)(params);
        else
          res = eval(method)();

        console.log(method + " response: "+ res)
        reply(null, res);
    }
});

var url = "tcp://0.0.0.0:4242"

server.bind(url);
console.log("Zerorpc listening on: " + url)

// **************************
// ******* DEVICE ***********
// **************************
function deploy_device_data_contract(data, interface, device_addr){
    
    // device address that the contract belongs to, this device will push data
    var _addr = device_addr;

    // interface of the contract
    var datahistoryContract = web3.eth.contract(interface);

    // estimate gas for contract
    var gasEstimate = web3.eth.estimateGas({data: data});

    var datahistory = datahistoryContract.new(
       _addr,
       {
         from: web3.eth.accounts[0], 
         data: data,
         gas: gasEstimate*2
       }, function (e, contract){
        contractDeploymentCallback(e, contract);
     })
}

// *********** Device Data Upload **************
// params: data hash, shape
function new_data_upload(params){
  // pull vars out of the params object
  var data_hash = params['data_hash']
  var shape = params['shape']
  var timestamp = params['timestamp']

  // good idea to try call before executing on chain
  // console.log("CALL")
  // console.log(deviceData.new_data_upload.call(data_hash, timestamp, shape))

  console.log("Send transaction")
  var response = deviceData.new_data_upload.sendTransaction(
      data_hash, timestamp, shape, {
                  from:defaultAccount, 
                  data: data,
                  gas: 1000000
                }
      )
  
  return response
}

// ********** Retrieve data hashes ***********
// params: start time, end time
// method requires the user account be permissioned!
function get_uploaded_device_data(params){
  var start_time = params['start_time'] 
  var end_time = params['end_time']

  // good idea to try call before executing on chain
  console.log("CALL")

  var response = deviceData.get_uploads_in_time_interval.call(start_time, end_time)

  // console.log("Send Transaction")
  // var response = deviceData.get_uploads_in_time_interval.sendTransaction(
  //     start_time, end_time, {
  //                 from:defaultAccount, 
  //                 data: data,
  //                 gas: 1000000
  //               }
  //     )
  
  return response
}


// ********* Set permissions ************
// params: user addr, bool
function set_user_permissions(params){
  var user_addr = params['user_addr']
  var permission = params['permission']

  // console.log("CALL:")
  // var response = deviceData.set_user_permissions.call(user_addr, permission)

  console.log('Transaction:')
  var response = deviceData.set_user_permissions.sendTransaction(
      user_addr, permission, {
                  from:defaultAccount, 
                  data: data,
                  gas: 1000000
                }
      )
}


// ************************
// ****** Helper methods **
// ************************

// callback method for all contract deployments, returns address or error
function contractDeploymentCallback(e, contract){
  if(!e) {
        if(!contract.address) {
          console.log("Contract transaction send: TransactionHash: " + contract.transactionHash + " waiting to be mined...");
        } else {
          console.log("Contract mined! Address: " + contract.address);
        }
      } // end contract addr if
  else {
    console.log("err: " + e)
  }
}


// init the event listeners on the device contract
function createEventListeners(){
  // set up listeners to watch for events within the contract
  // note the function names to watch are the actual events in the contract

  // DATA UPLOAD
  deviceData.newDataUpload().watch(function(error, result) {
    console.log('')
    console.log('********* NEW DATA UPLOAD ************')
    console.log('')

      if (!error)
          console.log(result.args)
      else
        console.log("Err: " + error)
  })


  // USER PERMISSIONS CHANGED
  deviceData.userPermissionsRevised().watch(function(error, result) {
    console.log("********* USER Permission Revised ************")

      if (!error)
          console.log(result.args)
      else
        console.log("Err: " + error)
    })


  // DATA RECEIVED
  deviceData.dataHashesReceived().watch(function(error, result) {
    console.log()
    console.log("********* DATA RECEIVED ************")
    console.log()

      if (!error)
          // return value is the concat string of the hashes 
          console.log(result.args.return_value)
      else
        console.log("Err: " + error)
    })

}







// *********** Receive Data **************
// some date likely input by user
// var date1 = +new Date("October 13, 2014 11:13:00")

// console.log("***** CALL ******")
// console.log(deviceData.get_uploads_in_time_interval.call(date1, Date.now()))

// console.log("***** Send transaction *****")
// console.log(deviceData.get_uploads_in_time_interval.sendTransaction(
//     date1, Date.now(), {
//                 from:web3.eth.accounts[0], 
//                 data: data,
//                 gas: 1000000
//               }
//     )
//   )


// *********** User Permissions **************
// console.log("***** CALL ******")
// console.log(deviceData.set_user_permissions.call("0xb158db720b045f285668657789b23d273fa2b136", true))

// console.log("***** Send transaction *****")
// console.log(deviceData.set_user_permissions.sendTransaction(
//     "0xb158db720b045f285668657789b23d273fa2b136", true, {
//                 from:web3.eth.accounts[0], 
//                 data: '0x60606040523461000057604051602080610bdd833981016040528080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055506001600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055505b505b610ac5806101186000396000f360606040526000357c010000000000000000000000000000000000000000000000000000000090048063098805961461006457806327368c841461009d57806341c0e1b5146101115780634946c3551461012057806387db9f23146101b2575b610000565b34610000576100716101ee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610000576100fb600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610276565b6040518082815260200191505060405180910390f35b346100005761011e6104f7565b005b346100005761014460048080359060200190919080359060200190919050506105e8565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610000576101d66004808035906020019091908035906020019091905050610801565b60405180821515815260200191505060405180910390f35b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024c57610000565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b5b90565b60006003805480600101828181548183558181151161032b5760020281600202836000526020600020918201910161032a91905b8082111561032657600060008201805460018160011615610100020316600290046000825580601f106102dd5750610314565b601f01602090049060005260206000209081019061031391905b8082111561030f5760008160009055506001016102f7565b5090565b5b506001820160009055506002016102aa565b5090565b5b505050916000526020600020906002020160005b6040604051908101604052808781526020018681526020015090919091506000820151816000019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103af57805160ff19168380011785556103dd565b828001600101855582156103dd579182015b828111156103dc5782518255916020019190600101906103c1565b5b50905061040291905b808211156103fe5760008160009055506001016103e6565b5090565b5050602082015181600101555050507f847b4483fa1479df435fa244dbf53d96ea6a34cc2f865f216a44ccf8832021e9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051808473ffffffffffffffffffffffffffffffffffffffff168152602001806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104d95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160038054905090505b92915050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561055357610000565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105e457600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b5b565b602060405190810160405280600081526020015060006000600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561064257610000565b600090505b6003805490508110156107f75784600382815481101561000057906000526020600020906002020160005b50600101541180156106a4575083600382815481101561000057906000526020600020906002020160005b5060010154105b156107e9576107056106ee604060405190810160405280600181526020017f2c0000000000000000000000000000000000000000000000000000000000000081526020015061099b565b6106f78561099b565b6109e190919063ffffffff16565b9250600381815481101561000057906000526020600020906002020160005b5060000191506107e66107cf838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b505050505061099b565b6107d88561099b565b6109e190919063ffffffff16565b92505b5b8080600101915050610647565b5b5b505092915050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085f57610000565b81600260008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055507f2f972837b5f07f2f039bc5c37cbac73dbe21c9de902d02ef77d9abca796c7e07600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018215158152602001935050505060405180910390a1600260008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b5b92915050565b6040604051908101604052806000815260200160008152602001506000602083019050604060405190810160405280845181526020018281526020015091505b50919050565b6020604051908101604052806000815260200150602060405190810160405280600081526020015060008360000151856000015101604051805910610a235750595b908082528060200260200182016040528015505b509150602082019050610a538186602001518760000151610a78565b610a6c8560000151820185602001518660000151610a78565b8192505b505092915050565b60005b602082101515610aa157825184526020840193506020830192505b602082039150610a7b565b6001826020036101000a039050801983511681855116818117865250505b5050505056',
//                 gas: 1000000
//               }
//     )
//   )


// *********** DATA Upload **************
// console.log("***** CALL")
// console.log(deviceData.new_data_upload.call("QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG", Date.now()))

// console.log("***** Send transaction")
// console.log(deviceData.new_data_upload.sendTransaction(
//     "QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG", Date.now(), [480, 640, 3], {
//                 from:web3.eth.accounts[0], 
//                 data: '0x60606040523461000057604051602080610bdd833981016040528080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055506001600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055505b505b610ac5806101186000396000f360606040526000357c010000000000000000000000000000000000000000000000000000000090048063098805961461006457806327368c841461009d57806341c0e1b5146101115780634946c3551461012057806387db9f23146101b2575b610000565b34610000576100716101ee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610000576100fb600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610276565b6040518082815260200191505060405180910390f35b346100005761011e6104f7565b005b346100005761014460048080359060200190919080359060200190919050506105e8565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610000576101d66004808035906020019091908035906020019091905050610801565b60405180821515815260200191505060405180910390f35b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024c57610000565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b5b90565b60006003805480600101828181548183558181151161032b5760020281600202836000526020600020918201910161032a91905b8082111561032657600060008201805460018160011615610100020316600290046000825580601f106102dd5750610314565b601f01602090049060005260206000209081019061031391905b8082111561030f5760008160009055506001016102f7565b5090565b5b506001820160009055506002016102aa565b5090565b5b505050916000526020600020906002020160005b6040604051908101604052808781526020018681526020015090919091506000820151816000019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103af57805160ff19168380011785556103dd565b828001600101855582156103dd579182015b828111156103dc5782518255916020019190600101906103c1565b5b50905061040291905b808211156103fe5760008160009055506001016103e6565b5090565b5050602082015181600101555050507f847b4483fa1479df435fa244dbf53d96ea6a34cc2f865f216a44ccf8832021e9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051808473ffffffffffffffffffffffffffffffffffffffff168152602001806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104d95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160038054905090505b92915050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561055357610000565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105e457600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b5b565b602060405190810160405280600081526020015060006000600260003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561064257610000565b600090505b6003805490508110156107f75784600382815481101561000057906000526020600020906002020160005b50600101541180156106a4575083600382815481101561000057906000526020600020906002020160005b5060010154105b156107e9576107056106ee604060405190810160405280600181526020017f2c0000000000000000000000000000000000000000000000000000000000000081526020015061099b565b6106f78561099b565b6109e190919063ffffffff16565b9250600381815481101561000057906000526020600020906002020160005b5060000191506107e66107cf838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b505050505061099b565b6107d88561099b565b6109e190919063ffffffff16565b92505b5b8080600101915050610647565b5b5b505092915050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085f57610000565b81600260008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009081020402179055507f2f972837b5f07f2f039bc5c37cbac73dbe21c9de902d02ef77d9abca796c7e07600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018215158152602001935050505060405180910390a1600260008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b5b92915050565b6040604051908101604052806000815260200160008152602001506000602083019050604060405190810160405280845181526020018281526020015091505b50919050565b6020604051908101604052806000815260200150602060405190810160405280600081526020015060008360000151856000015101604051805910610a235750595b908082528060200260200182016040528015505b509150602082019050610a538186602001518760000151610a78565b610a6c8560000151820185602001518660000151610a78565b8192505b505092915050565b60005b602082101515610aa157825184526020840193506020830192505b602082039150610a7b565b6001826020036101000a039050801983511681855116818117865250505b5050505056',
//                 gas: 1000000
//               }
//     )
//   )
